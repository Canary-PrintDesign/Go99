// Adds a matching background and border-color
@mixin colored-button($color: $white, $color-bg: $black, $color-border: $white, $color-active: shade($color, 20%), $color-bg-active: shade($color-bg, 20%), $color-border-active: shade($color-border, 20%)) {
  color: $color;
  background: $color-bg;
  border-color: $color-border;

  &:hover {
    color: $color;
    background: $color-bg-active;
    border-color: $color-border-active;
  }
}

.btn,
button {
  @include appearance(none);
  @include colored-button;
  padding: 0.7em;
  display: inline-block;
  border: 1px solid transparent;
  border-radius: 4px;
  letter-spacing: 0.05em;
  text-align: center;
  text-decoration: none;

  &.btn-primary {
    @include colored-button($black, $color-primary, $color-primary);
    box-shadow: 0 4px shade($color-primary, 20%);
  }

  &.btn-outline {
    box-shadow: none;
  }

  &.btn-primary.btn-outline {
    @include colored-button($color-primary, transparent, $color-primary);
  }

  &.btn-inverse.btn-outline {
    @include colored-button($white, transparent, $white);
  }
}

.btn-split {
  padding: 0;
  border: 0;

  .btn-addon,
  .btn-content {
    border: 1px solid transparent;
    display: inline-block;
    padding: 0.7em;
  }

  > :first-child {
    border-radius: 4px 0 0 4px;
  }

  > :last-child {
    border-radius: 0 4px 4px 0;
  }

  &.btn-primary {
    .btn-addon,
    .btn-content {
      border-color: $color-primary;
    }

    > :nth-child(1) {
      border-right-color: $black;
    }

    > :nth-child(n + 2) {
      border-left-color: transparent;
    }
  }

  &.btn-inverse.btn-outline {
    .btn-addon,
    .btn-content {
      border-color: $white;
    }

    > :nth-child(1) {
      border-right-color: $white;
    }

    > :nth-child(n + 2) {
      border-left-color: transparent;
    }
  }
}
